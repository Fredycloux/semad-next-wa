generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"   // Usamos Postgres en Vercel
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(cuid())
  username     String   @unique
  name         String?
  email        String?  @unique
  passwordHash String
  role         Role     @default(RECEPCION)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Patient {
  id         String   @id @default(cuid())
  fullName   String
  document   String?
  phone      String?
  email      String?
  insurer    String?
  allergies  String?
  history    String?
  dentition  String   @default("ADULT") // "ADULT" | "CHILD"
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  appointments   Appointment[]
  invoices       Invoice[]
  odontogram     OdontogramEntry[]
}

model Appointment {
  id        String   @id @default(cuid())
  date      DateTime
  reason    String?
  dentist   String?
  status    String   @default("Programada")
  patient   Patient  @relation(fields: [patientId], references: [id])
  patientId String
}

model InventoryItem {
  id      String @id @default(cuid())
  name    String
  code    String @unique
  unit    String?
  stock   Int    @default(0)
  minimum Int    @default(0)
  cost    Int    @default(0)
  price   Int    @default(0)
}

model Procedure {
  id        Int      @id @default(autoincrement())
  code      String   @unique
  name      String
  price     Int
  invoices  InvoiceItem[]
  active    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) // <-- valor por defecto para filas existentes
}

model Invoice {
  id        String   @id @default(cuid())
  date      DateTime @default(now())
  patient   Patient  @relation(fields: [patientId], references: [id])
  patientId String
  items     InvoiceItem[]
}

model InvoiceItem {
  id            String    @id @default(cuid())
  quantity      Int       @default(1)
  tooth         String?
  procedure     Procedure @relation(fields: [procedureCode], references: [code])
  procedureCode String
  invoice       Invoice   @relation(fields: [invoiceId], references: [id])
  invoiceId     String
}

model OdontogramEntry {
  id        String   @id @default(cuid())
  tooth     String
  surface   String   // "O" | "M" | "D" | "V" | "L"
  label     String
  color     String?  // hex #RRGGBB
  patient   Patient  @relation(fields: [patientId], references: [id])
  patientId String
  createdAt DateTime @default(now())

  @@unique([patientId, tooth, surface], name: "patient_tooth_surface")
}

model Dentist {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  active    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  ADMIN
  ODONTOLOGO
  RECEPCION
}

enum Dentition {
  ADULT
  CHILD
}

enum Surface {
  O   // oclusal/incisal
  M   // mesial
  D   // distal
  B   // vestibular/bucal
  L   // lingual/palatina
}
